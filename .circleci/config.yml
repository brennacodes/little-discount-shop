# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  ruby: circleci/ruby@0.1.2
  # aws-elastic-beanstalk: circleci/aws-elastic-beanstalk@2.0.1

executors:
  app:
    working_directory: ~/little-discount-shop
    docker:
      - image: cimg/ruby:3.1.2-node
        environment:
          PGHOST: localhost
          PGUSER: discount_shop
          RAILS_ENV: test
      - image: postgres:14.4
        environment:
          POSTGRES_USER: discount_shop
          POSTGRES_DB: discount_shop_db
          RAILS_ENV: production
          POSTGRES_PASSWORD:

commands:
  install_flyctl:
    steps:
      - run: export FLYCTL_INSTALL="/home/circleci/.fly"
      - run: export PATH="$FLYCTL_INSTALL/bin:$PATH"
      - run:
          name: Install Flyctl
          command: |
            curl -L https://fly.io/install.sh | sh -s "latest"
            /home/circleci/.fly/bin/flyctl auth token ${FLY_ACCESS_TOKEN}
  deploy_to_fly_platform:
    steps:
      - run:
          name: Deploy to fly.io
          command: |
            "/home/circleci/.fly/bin/flyctl" --app discount-shop deploy \
              --remote-only \
  install_dependencies:
    steps:
      - checkout
      - run: bundle install
  # run_tests:
  #   steps:
  #     - checkout
  #     - run: bin/rails db:{create,migrate}
  #     - run: bundle exec rspec

jobs:
  build:
    executor: app
    parallelism: 4
    steps:
      - install_dependencies
  test:
    executor: app
    parallelism: 4
    steps:
      - checkout
      - install_dependencies
      - run:
          name: Run Tests
          command: |
            TEST=$(circleci tests glob "spec/__tests__/*_spec.rb" | circleci tests split --split-by=timings)
            bundle exec rspec $TEST
  deploy:
    machine:
      image: ubuntu-2204:2022.04.2
      docker_layer_caching: true
    steps:
      - checkout
      - install_flyctl
      - deploy_to_fly_platform

workflows:
  build_test_deploy:
    jobs:
      - build
      - test
      - deploy:
          context:
            - discount-shop-deploy
          requires:
            - test
          filters:
            branches:
              only: main